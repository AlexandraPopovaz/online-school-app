name: Build backend image and start the app
on:
  push:
    branches: [ test ]

jobs:
  build:
    name: Build backend image (prod)
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: online-school-backend
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --target production .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Start application
      run: |
        docker context create ecs ecs_context
        docker context use ecs_context
        docker compose -f docker-compose.prod.yml \
          -e POSTGRES_DB=online-school-db-prod \
          -e POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
          -e POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
          -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
          -e PGADMIN_DEFAULT_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
        up